{"version":3,"file":"scripts/main.bundle.js","mappings":"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","sources":["webpack://bankan/./public/scripts/models/columnModel.ts","webpack://bankan/./public/scripts/services/columnService.ts","webpack://bankan/./public/scripts/services/taskService.ts","webpack://bankan/./public/scripts/utils/dragAndDrop.ts","webpack://bankan/./public/scripts/components/taskRenderer.ts","webpack://bankan/./public/scripts/components/columnRenderer.ts","webpack://bankan/./public/scripts/main.ts"],"sourcesContent":["export let columns = [];\n","import { columns } from '../models/columnModel';\nconst url = 'http://localhost:3000';\nexport async function getColumns() {\n    const getColumnUrl = url.concat('/api/columns');\n    try {\n        const response = await fetch(getColumnUrl);\n        if (!response.ok) {\n            throw new Error(`Response status: ${response.status}`);\n        }\n        const msg = await response.json();\n        return msg;\n    }\n    catch (error) {\n        if (error instanceof Error) {\n            console.error(error.message);\n        }\n        return [];\n    }\n}\nexport async function postColumn(newColumn) {\n    const postColumnUrl = url.concat('/api/columns');\n    try {\n        const response = await fetch(postColumnUrl, {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(newColumn)\n        });\n        if (!response.ok) {\n            throw new Error(`Server error: ${response.status}`);\n        }\n        //const result = await response.json();\n        //console.log('Column created: ', result);\n    }\n    catch (error) {\n        if (error instanceof Error) {\n            console.error('Error posting column: ', error.message);\n        }\n    }\n}\nexport async function patchColumn(columnId, title) {\n    const patchColumnUrl = url.concat(`/api/columns/${columnId}`);\n    try {\n        const response = await fetch(patchColumnUrl, {\n            method: 'PATCH',\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify({ title })\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to add column. Server responded with ${response.status}`);\n        }\n        //const updateColumn = await response.json();\n        //console.log('Updated column: ', updateColumn);\n    }\n    catch (error) {\n        if (error instanceof Error) {\n            console.error(error);\n        }\n    }\n}\nexport async function deleteColumn(columnId) {\n    const deleteColumnUrl = url.concat(`/api/columns/${columnId}`);\n    try {\n        const response = await fetch(deleteColumnUrl, {\n            method: 'DELETE',\n            headers: {\n                'Content-type': 'application/json'\n            },\n        });\n        if (!response.ok) {\n            console.error(`Error deleting column: ${response.status}`);\n        }\n    }\n    catch (error) {\n        if (error instanceof Error) {\n            console.log(error);\n        }\n    }\n}\nexport async function loadColumns() {\n    const fetchedColumns = await getColumns();\n    columns.length = 0;\n    columns.push(...fetchedColumns);\n}\n","const url = 'http://localhost:3000';\nexport async function getTasks(columnId) {\n    const getTaskUrl = url.concat(`/api/columns/${columnId}/tasks`);\n    try {\n        const response = await fetch(getTaskUrl);\n        if (!response.ok) {\n            throw new Error(`Response status: ${response.status}`);\n        }\n        const msg = await response.json();\n        if (msg.success && Array.isArray(msg.tasks)) {\n            return msg.tasks;\n        }\n        return [];\n    }\n    catch (error) {\n        if (error instanceof Error) {\n            console.error(error.message);\n        }\n        return [];\n    }\n}\nexport const addTaskToColumn = async (columnId, title, description) => {\n    try {\n        const response = await fetch(`/api/columns/${columnId}/tasks`, {\n            method: 'PATCH',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ title, description }),\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to add task: ${response.statusText}`);\n        }\n        const data = await response.json();\n        if (!data.success || !data.task) {\n            console.log(data.message || 'Failed to add task!');\n            return { success: false, message: data.message || 'Failed to add task' };\n        }\n        return { success: true, message: 'Task added', task: data.task };\n    }\n    catch (error) {\n        console.error(error);\n        return { success: false, message: 'Failed to add task!' };\n    }\n};\nexport async function patchTaskTitle(columnId, taskId, title) {\n    const patchTaskTitleUrl = url.concat(`/api/columns/${columnId}/tasks/${taskId}`);\n    try {\n        const response = await fetch(patchTaskTitleUrl, {\n            method: 'PATCH',\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify({ title })\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to update task title. Server responded with ${response.status}`);\n        }\n        //const updateTaskTitle = await response.json();\n        //console.log('Updated task title: ', updateTaskTitle);\n    }\n    catch (error) {\n        if (error instanceof Error) {\n            console.error(error);\n        }\n    }\n}\nexport async function patchTaskDescription(columnId, taskId, description) {\n    const patchTaskDescriptionUrl = url.concat(`/api/columns/${columnId}/tasks/${taskId}`);\n    try {\n        const response = await fetch(patchTaskDescriptionUrl, {\n            method: 'PATCH',\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify({ description })\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to update task description. Server responded with ${response.status}`);\n        }\n        //const updateTaskTitle = await response.json();\n        //console.log('Updated task description: ', updateTaskTitle);\n    }\n    catch (error) {\n        if (error instanceof Error) {\n            console.error(error);\n        }\n    }\n}\nexport async function deleteTask(columnId, taskId) {\n    const deleteTaskUrl = url.concat(`/api/columns/${columnId}/tasks/${taskId}`);\n    //console.log('(deleteTask) columnId: ', columnId, 'taskId: ', taskId);\n    try {\n        const response = await fetch(deleteTaskUrl, {\n            method: 'DELETE',\n            headers: {\n                'Content-type': 'application/json'\n            }\n        });\n        if (!response.ok) {\n            throw new Error(`Error deleting the task: ${response.status}`);\n        }\n        //console.log('Task deleted succesfully!');\n    }\n    catch (error) {\n        if (error instanceof Error) {\n            console.log(error);\n        }\n    }\n}\nexport async function updateTaskOrder(columnId, tasks) {\n    const updateTaskOrderUrl = url.concat(`/api/columns/${columnId}/reorder`);\n    try {\n        const response = await fetch(updateTaskOrderUrl, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ tasks })\n        });\n        if (!response.ok) {\n            throw new Error(`Error updating task order: ${response.statusText}`);\n        }\n        //console.log('Task order updated successfully'); \n    }\n    catch (error) {\n        if (error instanceof Error) {\n            console.error('updateTaskOrder: ', error);\n        }\n    }\n}\nexport async function moveTask(sourceColumnId, targetColumnId, taskId) {\n    const moveTaskUrl = url.concat('/api/columns/moveTask');\n    try {\n        const response = await fetch(moveTaskUrl, {\n            method: 'PATCH',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ sourceColumnId, targetColumnId, taskId })\n        });\n        if (!response.ok) {\n            throw new Error(`Error moving task: ${response.statusText}`);\n        }\n        //console.log('Task order updated successfully'); \n    }\n    catch (error) {\n        console.error('Error moving task:', error);\n    }\n}\n","import { columns } from '../models/columnModel';\nimport { updateTaskOrder, moveTask } from '../services/taskService';\nlet sourceColumnId = null;\nlet placeholder = null;\nexport function setupColumnsDragAndDrop() {\n    const columns = document.querySelectorAll('.column');\n    if (columns && Array.isArray(columns)) {\n        columns.forEach(column => {\n            column.addEventListener('dragover', (e) => handleDragOver(e));\n            column.addEventListener('dragenter', (e) => handleDragEnter(e));\n            column.addEventListener('dragleave', (e) => handleDragLeave(e));\n            column.addEventListener('drop', (e) => handleDrop(e));\n        });\n    }\n}\nexport function handleDragOver(e) {\n    e.preventDefault();\n    if (e.dataTransfer) {\n        e.dataTransfer.dropEffect = 'move';\n    }\n    const column = e.currentTarget;\n    const dragging = document.querySelector('.dragging');\n    if (dragging) {\n        const applyAfter = getNewPosition(column, e.clientY);\n        if (applyAfter && applyAfter !== placeholder) {\n            applyAfter.insertAdjacentElement('beforebegin', dragging);\n        }\n        else if (!applyAfter && column.lastElementChild !== placeholder) {\n            column.appendChild(dragging);\n        }\n    }\n}\nexport function getNewPosition(column, posY) {\n    const elements = Array.prototype.slice.call(column.querySelectorAll('.task:not(.dragging)'));\n    for (const element of elements) {\n        const box = element.getBoundingClientRect();\n        const offset = posY - box.top - box.height / 2;\n        if (offset < 0) {\n            return element;\n        }\n    }\n    return null;\n}\nexport function handleDragEnter(e) {\n    const target = e.currentTarget;\n    target.classList.add('over');\n}\nexport function handleDragLeave(e) {\n    const target = e.currentTarget;\n    target.classList.remove('over');\n}\nexport function handleDrop(e) {\n    var _a;\n    e.preventDefault();\n    const data = (_a = e.dataTransfer) === null || _a === void 0 ? void 0 : _a.getData('text/plain');\n    let draggedElement;\n    if (data) {\n        draggedElement = document.getElementById(data);\n    }\n    const targetColumn = e.currentTarget;\n    targetColumn.classList.remove('over');\n}\nexport function setupTaskDragAndDrop(task) {\n    if (task._id) {\n        const taskElement = document.getElementById(task._id);\n        if (!taskElement) {\n            return;\n        }\n        const parentColumn = taskElement.closest('.column');\n        if (parentColumn) {\n            taskElement.setAttribute('data-column-id', parentColumn.id);\n        }\n        taskElement.addEventListener('dragstart', (e => handleDragStart(e, task)));\n        taskElement.addEventListener('dragend', (e => handleDragEnd(e, task)));\n    }\n}\nexport function removeTaskDragAndDrop(task) {\n    if (task._id) {\n        const taskElement = document.getElementById(task._id);\n        if (!taskElement) {\n            return;\n        }\n        const parentColumn = taskElement.closest('.column');\n        if (parentColumn) {\n            taskElement.setAttribute('data-column-id', parentColumn.id);\n        }\n        const clone = taskElement.cloneNode(true);\n        taskElement.replaceWith(clone);\n    }\n}\n/**\n* handler para quando a task iniciar o processo de drag\n* @param {DragEvent} e: DragEvent\n*/\nexport async function handleDragStart(e, task) {\n    const target = e.currentTarget;\n    if (e.dataTransfer) {\n        e.dataTransfer.effectAllowed = 'move';\n        if (task._id) {\n            e.dataTransfer.setData('taskId', task._id);\n        }\n    }\n    const targetColumn = e.currentTarget;\n    const columnElement = targetColumn.closest('.column');\n    if (task._id) {\n        sourceColumnId = columnElement.id;\n    }\n    target.classList.add('dragging');\n    placeholder = document.createElement('div');\n    placeholder.classList.add('placeholder');\n    placeholder.style.height = `${target.offsetHeight}px`;\n}\n/**\n* handler para quando a task encerrar o processo de drag\n* @param {DragEvent} e: DragEvent\n*/\nexport async function handleDragEnd(e, task) {\n    const dragging = document.querySelector('.dragging');\n    if (dragging && placeholder) {\n        const targetColumn = e.currentTarget;\n        const columnElement = targetColumn.closest('.column');\n        if (columnElement && sourceColumnId) {\n            const targetColumnId = columnElement.id;\n            const columnIndex = columns.findIndex(column => column._id === columnElement.id);\n            if (task._id) {\n                const allTasks = columnElement.querySelectorAll('.task');\n                let newIndex = Array.from(allTasks).indexOf(dragging);\n                if (newIndex !== -1) {\n                    if (sourceColumnId === targetColumnId) {\n                        if (task._id) {\n                            const currentIndex = columns[columnIndex].tasks.findIndex((t) => t._id === task._id);\n                            columns[columnIndex].tasks.splice(currentIndex, 1);\n                            columns[columnIndex].tasks.splice(newIndex, 0, { title: task.title, description: task.description, _id: task._id });\n                            await updateTaskOrder(targetColumnId, columns[columnIndex].tasks);\n                        }\n                    }\n                    else {\n                        columns[columnIndex].tasks.splice(newIndex, 0, { title: task.title, description: task.description, _id: task._id });\n                        await moveTask(sourceColumnId, targetColumnId, task._id);\n                        await updateTaskOrder(targetColumnId, columns[columnIndex].tasks);\n                    }\n                }\n            }\n        }\n        placeholder.replaceWith(dragging);\n        dragging.classList.remove('dragging');\n        placeholder = null;\n    }\n}\n","import { columns } from '../models/columnModel';\nimport { setupTaskDragAndDrop, removeTaskDragAndDrop } from '../utils/dragAndDrop';\nimport { patchTaskTitle, patchTaskDescription, deleteTask, addTaskToColumn } from '../services/taskService';\nimport { loadColumns } from '../services/columnService';\nimport { setupColumnsDragAndDrop } from '../utils/dragAndDrop';\nexport function createTaskElement(task) {\n    const taskElement = document.createElement('div');\n    taskElement.classList.add('task', 'item');\n    taskElement.setAttribute('draggable', 'true');\n    if (task._id) {\n        taskElement.id = task._id;\n    }\n    const taskHeader = document.createElement('div');\n    taskHeader.classList.add('taskHeader');\n    const taskTitle = document.createElement('div');\n    taskTitle.classList.add('taskTitle');\n    taskTitle.textContent = task.title;\n    const taskDots = document.createElement('div');\n    taskDots.classList.add('menuDots');\n    taskDots.innerHTML = \"\\u22EE\";\n    taskDots.setAttribute('draggable', 'false');\n    taskHeader.appendChild(taskTitle);\n    taskHeader.appendChild(taskDots);\n    const taskDescription = document.createElement('div');\n    taskDescription.classList.add('taskDescription');\n    taskDescription.textContent = task.description;\n    taskElement.appendChild(taskHeader);\n    taskElement.appendChild(taskDescription);\n    setupTaskDragAndDrop(task);\n    setupMenuDialog(taskDots, taskTitle, taskDescription, taskElement);\n    return taskElement;\n}\nexport function setupMenuDialog(taskDots, taskTitle, taskDescription, taskElement) {\n    taskDots.onclick = () => {\n        let taskDialog = taskDots.querySelector('.menuDialog');\n        if (taskDialog) {\n            taskDialog.style.display = taskDialog.style.display === 'block' ? 'none' : 'block';\n        }\n        else {\n            taskDialog = document.createElement('div');\n            taskDialog.classList.add('menuDialog');\n            const titleHeader = document.createElement('h2');\n            titleHeader.textContent = 'Column dialog';\n            taskDialog.appendChild(titleHeader);\n            const editTaskTitle = document.createElement('button');\n            editTaskTitle.innerHTML = 'Edit title';\n            taskDialog.appendChild(editTaskTitle);\n            editTaskTitle.onclick = () => {\n                taskTitle.innerHTML = '';\n                const inputTitle = document.createElement('input');\n                inputTitle.type = 'text';\n                inputTitle.value = taskTitle.textContent || '';\n                taskTitle.appendChild(inputTitle);\n                inputTitle.focus();\n                const saveTitle = async () => {\n                    taskTitle.textContent = inputTitle.value;\n                    taskDialog.style.display = 'none';\n                    const columnElement = taskElement.parentElement;\n                    if (columnElement) {\n                        const columnId = columnElement.id;\n                        const columnIndex = columns.findIndex(column => column._id === columnId);\n                        if (columnIndex !== -1) {\n                            const taskId = taskElement.id;\n                            if (taskId) {\n                                await patchTaskTitle(columnElement.id, taskId, inputTitle.value);\n                                const taskIndex = columns[columnIndex].tasks.findIndex(task => task._id === taskId);\n                                removeTaskDragAndDrop(columns[columnIndex].tasks[taskIndex]);\n                                setupTaskDragAndDrop(columns[columnIndex].tasks[taskIndex]);\n                            }\n                        }\n                    }\n                };\n                const saveButton = document.createElement('button');\n                saveButton.textContent = 'Save';\n                taskDialog.appendChild(saveButton);\n                saveButton.onclick = saveTitle;\n                inputTitle.addEventListener('keypress', (e) => {\n                    if (e.key === 'Enter') {\n                        saveTitle();\n                    }\n                });\n            };\n            const editTaskDescription = document.createElement('button');\n            editTaskDescription.innerHTML = 'Edit desc';\n            taskDialog.appendChild(editTaskDescription);\n            editTaskDescription.onclick = () => {\n                taskDescription.innerHTML = '';\n                const inputTitle = document.createElement('input');\n                inputTitle.type = 'text';\n                inputTitle.value = taskDescription.textContent || '';\n                taskDescription.appendChild(inputTitle);\n                inputTitle.focus();\n                const saveDescription = () => {\n                    taskDescription.textContent = inputTitle.value;\n                    taskDialog.style.display = 'none';\n                    const columnElement = taskElement.parentElement;\n                    if (columnElement) {\n                        const columnId = columnElement.id;\n                        patchTaskDescription(columnElement.id, taskElement.id, inputTitle.value);\n                        const columnIndex = columns.findIndex(column => column._id === columnId);\n                        if (columnIndex !== -1) {\n                            const taskId = taskElement.id;\n                            if (taskId) {\n                                const taskIndex = columns[columnIndex].tasks.findIndex(task => task._id === taskId);\n                                removeTaskDragAndDrop(columns[columnIndex].tasks[taskIndex]);\n                                setupTaskDragAndDrop(columns[columnIndex].tasks[taskIndex]);\n                            }\n                        }\n                    }\n                };\n                const saveButton = document.createElement('button');\n                saveButton.textContent = 'Save';\n                taskDialog.appendChild(saveButton);\n                saveButton.onclick = saveDescription;\n                inputTitle.addEventListener('keypress', (e) => {\n                    if (e.key === 'Enter') {\n                        saveDescription();\n                    }\n                });\n            };\n            const deleteTaskButton = document.createElement('button');\n            deleteTaskButton.innerHTML = 'Delete task';\n            taskDialog.appendChild(deleteTaskButton);\n            deleteTaskButton.onclick = async () => {\n                const columnElement = taskElement.parentElement;\n                if (columnElement) {\n                    const columnId = columnElement.id;\n                    const columnIndex = columns.findIndex(column => column._id === columnId);\n                    if (columnIndex !== -1) {\n                        const taskId = taskElement.id;\n                        if (taskId) {\n                            deleteTask(columnElement.id, taskId);\n                            const taskToBeRemoved = document.getElementById(taskId);\n                            if (taskToBeRemoved) {\n                                taskToBeRemoved.remove();\n                            }\n                        }\n                    }\n                }\n            };\n        }\n        taskDots.appendChild(taskDialog);\n    };\n}\nexport async function submitTask(columnSelected, title, description) {\n    const columnElement = document.getElementById(columnSelected);\n    if (!columnElement) {\n        console.error('columnElement is null:', columnElement);\n        return null;\n    }\n    try {\n        const response = await addTaskToColumn(columnSelected, title, description);\n        if (!response.success || !response.task) {\n            console.error(response.message);\n            return null;\n        }\n        const newTaskId = response.task._id;\n        await loadColumns();\n        const columnData = columns.find(column => column._id === columnSelected);\n        if (!columnData) {\n            console.error(`Column with ID ${columnSelected} not found`);\n            return null;\n        }\n        const taskToCreate = columnData.tasks.find(task => task._id === newTaskId);\n        if (!taskToCreate) {\n            console.error(\"Task not found!\");\n            return null;\n        }\n        const taskElement = createTaskElement(taskToCreate);\n        columnElement.appendChild(taskElement);\n        setupColumnsDragAndDrop();\n        setupTaskDragAndDrop(taskToCreate);\n        const dialog = document.getElementById('dialog');\n        if (dialog) {\n            dialog.remove();\n        }\n        else {\n            console.error('Dialog not found!');\n        }\n        return taskElement;\n    }\n    catch (error) {\n        console.error(\"Error adding task:\", error);\n        return null;\n    }\n}\n","import { columns } from '../models/columnModel';\nimport { patchColumn, deleteColumn, postColumn, loadColumns } from '../services/columnService';\nimport { setupColumnsDragAndDrop } from '../utils/dragAndDrop';\nimport { createTaskElement } from '../components/taskRenderer';\nexport function renderColumn(column) {\n    const itemContainer = document.getElementById('itemContainer');\n    if (!itemContainer) {\n        console.error('Item container not found');\n        return;\n    }\n    const columnElement = document.createElement('div');\n    columnElement.classList.add('column');\n    const columnId = column._id;\n    if (columnId) {\n        columnElement.id = columnId;\n    }\n    const columnTitle = document.createElement('div');\n    columnTitle.classList.add('columnTitle');\n    columnTitle.textContent = column.title;\n    const menuDots = document.createElement('div');\n    menuDots.classList.add('menuDots');\n    menuDots.innerHTML = \"\\u22EE\";\n    menuDots.onclick = () => {\n        let columnDialog = menuDots.querySelector('.menuDialog');\n        if (columnDialog) {\n            columnDialog.style.display = columnDialog.style.display === 'block' ? 'none' : 'block';\n        }\n        else {\n            columnDialog = document.createElement('div');\n            columnDialog.classList.add('menuDialog');\n            const titleHeader = document.createElement('h2');\n            titleHeader.textContent = 'Column dialog';\n            columnDialog.appendChild(titleHeader);\n            const editColumnTitle = document.createElement('button');\n            editColumnTitle.innerHTML = 'Edit';\n            editColumnTitle.onclick = () => {\n                columnTitle.innerHTML = '';\n                const inputTitle = document.createElement('input');\n                inputTitle.type = 'text';\n                inputTitle.value = columnTitle.textContent || '';\n                columnTitle.appendChild(inputTitle);\n                inputTitle.focus();\n                const saveButton = document.createElement('button');\n                saveButton.textContent = 'Save';\n                columnDialog.appendChild(saveButton);\n                saveButton.onclick = () => {\n                    columnTitle.textContent = inputTitle.value;\n                    columnDialog.style.display = 'none';\n                    const columnIndex = columns.findIndex(col => col._id === column._id);\n                    if (column._id) {\n                        patchColumn(column._id, inputTitle.value);\n                    }\n                    if (columnIndex !== -1) {\n                        columns.splice(columnIndex, 1, Object.assign(Object.assign({}, columns[columnIndex]), { title: inputTitle.value }));\n                    }\n                };\n                inputTitle.addEventListener('keypress', (e) => {\n                    if (e.key === 'Enter') {\n                        columnTitle.textContent = inputTitle.value;\n                        columnDialog.style.display = 'none';\n                        const columnIndex = columns.findIndex(col => col._id === column._id);\n                        if (columnIndex !== -1) {\n                            columns.splice(columnIndex, 1, Object.assign(Object.assign({}, columns[columnIndex]), { title: inputTitle.value }));\n                        }\n                    }\n                });\n            };\n            const deleteColumnButton = document.createElement('button');\n            deleteColumnButton.innerHTML = 'Delete';\n            deleteColumnButton.onclick = async () => {\n                const columnIndex = columns.findIndex(col => col._id === column._id);\n                if (column._id) {\n                    await deleteColumn(column._id);\n                    const columnToBeRemoved = document.getElementById(column._id);\n                    if (columnToBeRemoved) {\n                        columnToBeRemoved.remove();\n                    }\n                }\n            };\n            columnDialog.appendChild(editColumnTitle);\n            columnDialog.appendChild(deleteColumnButton);\n            menuDots.appendChild(columnDialog);\n            columnDialog.style.display = 'block';\n            columnDialog.onclick = (e) => {\n                e.stopPropagation();\n            };\n        }\n    };\n    const columnTitleContainer = document.createElement('div');\n    columnTitleContainer.classList.add('columnTitleContainer');\n    columnTitleContainer.appendChild(columnTitle);\n    columnTitleContainer.appendChild(menuDots);\n    columnElement.appendChild(columnTitleContainer);\n    if (column.tasks && Array.isArray(column.tasks)) {\n        column.tasks.forEach(task => {\n            const taskElement = createTaskElement(task);\n            columnElement.appendChild(taskElement);\n        });\n    }\n    itemContainer.appendChild(columnElement);\n    setupColumnsDragAndDrop();\n}\nexport async function submitColumn(titleInput) {\n    const title = titleInput.value;\n    if (titleInput && title) {\n        const columnData = { title, tasks: [] };\n        await postColumn(columnData);\n        await loadColumns();\n        const columnToRender = columns.find(column => column.title === title);\n        if (columnToRender) {\n            renderColumn(columnToRender);\n        }\n        else {\n            console.log('Column does not exist: ', columnToRender);\n            return null;\n        }\n    }\n    else {\n        console.error('Title cannot be empty');\n    }\n    if (titleInput)\n        titleInput.value = '';\n    const dialog = document.getElementById('dialog');\n    if (dialog) {\n        dialog.remove();\n    }\n    else {\n        console.error('Dialog not found!');\n    }\n}\n","import { columns } from './models/columnModel';\nimport { loadColumns } from './services/columnService';\nimport { setupColumnsDragAndDrop, setupTaskDragAndDrop } from './utils/dragAndDrop';\nimport { renderColumn, submitColumn } from './components/columnRenderer';\nimport { submitTask } from './components/taskRenderer';\nwindow.onload = async () => {\n    await loadColumns();\n    setupColumnsDragAndDrop();\n    if (columns && Array.isArray(columns)) {\n        columns.forEach(column => {\n            renderColumn(column);\n            column.tasks.forEach(task => setupTaskDragAndDrop(task));\n        });\n    }\n    window.addColumn = addColumn;\n    window.addTask = addTask;\n};\nexport function addColumn() {\n    const dialog = document.createElement('div');\n    dialog.id = 'dialog';\n    dialog.className = 'dialog';\n    const dialogContent = document.createElement('div');\n    dialogContent.className = 'dialog-content';\n    const closeButton = document.createElement('span');\n    closeButton.className = 'close';\n    closeButton.textContent = 'x';\n    closeButton.onclick = () => {\n        dialog.remove();\n    };\n    const titleHeader = document.createElement('h2');\n    titleHeader.textContent = 'Add New Column';\n    const titleLabel = document.createElement('label');\n    titleLabel.setAttribute('for', 'columnTitle');\n    titleLabel.textContent = 'Title:';\n    const titleInput = document.createElement('input');\n    titleInput.type = 'text';\n    titleInput.placeholder = 'Enter column title';\n    const submitButton = document.createElement('button');\n    submitButton.textContent = 'Submit';\n    submitButton.onclick = () => submitColumn(titleInput);\n    dialogContent.appendChild(closeButton);\n    dialogContent.appendChild(titleHeader);\n    dialogContent.appendChild(titleLabel);\n    dialogContent.appendChild(titleInput);\n    dialogContent.appendChild(submitButton);\n    dialog.appendChild(dialogContent);\n    document.body.appendChild(dialog);\n    titleInput.value = '';\n    dialog.style.display = 'block';\n}\nexport async function addTask() {\n    const dialog = document.createElement('div');\n    dialog.id = 'dialog';\n    dialog.className = 'dialog';\n    const dialogContent = document.createElement('div');\n    dialogContent.className = 'dialog-content';\n    const closeButton = document.createElement('span');\n    closeButton.className = 'close';\n    closeButton.textContent = 'x';\n    closeButton.onclick = () => {\n        dialog.remove();\n    };\n    const titleHeader = document.createElement('h2');\n    titleHeader.textContent = 'Add New Task';\n    const titleLabel = document.createElement('label');\n    titleLabel.setAttribute('for', 'taskTitle');\n    titleLabel.textContent = 'Title:';\n    const titleInput = document.createElement('input');\n    titleInput.type = 'text';\n    titleInput.id = 'taskTitle';\n    titleInput.placeholder = 'Enter task title';\n    const descriptionLabel = document.createElement('label');\n    descriptionLabel.setAttribute('for', 'taskDescription');\n    descriptionLabel.textContent = 'Description:';\n    const descriptionInput = document.createElement('input');\n    descriptionInput.type = 'text';\n    descriptionInput.id = 'taskDescription';\n    descriptionInput.placeholder = 'Enter task description';\n    const columnLabel = document.createElement('div');\n    columnLabel.textContent = 'Select Column:';\n    const columnSelect = document.createElement('select');\n    columnSelect.id = 'columnSelect';\n    if (columns && Array.isArray(columns)) {\n        columns.forEach(column => {\n            const option = document.createElement('option');\n            if (column._id) {\n                option.value = column._id;\n                option.textContent = column.title;\n                columnSelect.appendChild(option);\n            }\n        });\n    }\n    const submitButton = document.createElement('button');\n    submitButton.textContent = 'Submit';\n    submitButton.onclick = () => submitTask(columnSelect.value, titleInput.value, descriptionInput.value);\n    dialogContent.appendChild(closeButton);\n    dialogContent.appendChild(titleHeader);\n    dialogContent.appendChild(titleLabel);\n    dialogContent.appendChild(titleInput);\n    dialogContent.appendChild(descriptionLabel);\n    dialogContent.appendChild(descriptionInput);\n    dialogContent.appendChild(columnLabel);\n    dialogContent.appendChild(columnSelect);\n    dialogContent.appendChild(submitButton);\n    dialog.appendChild(dialogContent);\n    document.body.appendChild(dialog);\n    dialog.style.display = 'block';\n}\n"],"names":["columns","url","async","loadColumns","fetchedColumns","getColumnUrl","concat","response","fetch","ok","Error","status","json","error","console","message","getColumns","length","push","updateTaskOrder","columnId","tasks","updateTaskOrderUrl","method","headers","body","JSON","stringify","statusText","sourceColumnId","placeholder","setupColumnsDragAndDrop","document","querySelectorAll","Array","isArray","forEach","column","addEventListener","e","preventDefault","dataTransfer","dropEffect","currentTarget","dragging","querySelector","applyAfter","posY","elements","prototype","slice","call","element","box","getBoundingClientRect","top","height","getNewPosition","clientY","insertAdjacentElement","lastElementChild","appendChild","handleDragOver","classList","add","handleDragEnter","remove","handleDragLeave","_a","data","getData","draggedElement","getElementById","handleDrop","setupTaskDragAndDrop","task","_id","taskElement","parentColumn","closest","setAttribute","id","target","effectAllowed","setData","columnElement","createElement","style","offsetHeight","handleDragStart","targetColumnId","columnIndex","findIndex","allTasks","newIndex","from","indexOf","currentIndex","t","splice","title","description","taskId","moveTaskUrl","moveTask","replaceWith","handleDragEnd","removeTaskDragAndDrop","clone","cloneNode","createTaskElement","taskHeader","taskTitle","textContent","taskDots","innerHTML","taskDescription","onclick","taskDialog","display","titleHeader","editTaskTitle","inputTitle","type","value","focus","saveTitle","parentElement","patchTaskTitleUrl","patchTaskTitle","taskIndex","saveButton","key","editTaskDescription","saveDescription","patchTaskDescriptionUrl","patchTaskDescription","deleteTaskButton","deleteTaskUrl","log","deleteTask","taskToBeRemoved","setupMenuDialog","renderColumn","itemContainer","columnTitle","menuDots","columnDialog","editColumnTitle","col","patchColumnUrl","patchColumn","Object","assign","deleteColumnButton","deleteColumnUrl","deleteColumn","columnToBeRemoved","stopPropagation","columnTitleContainer","addColumn","dialog","className","dialogContent","closeButton","titleLabel","titleInput","submitButton","columnData","newColumn","postColumnUrl","postColumn","columnToRender","find","submitColumn","addTask","descriptionLabel","descriptionInput","columnLabel","columnSelect","option","columnSelected","success","addTaskToColumn","newTaskId","taskToCreate","submitTask","window","onload"],"sourceRoot":""}